{"version":3,"file":"static/js/379.2e4c135e.chunk.js","mappings":"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","sources":["components/Filter/filter.styled.js","components/Filter/Filter.jsx","components/Spiner/spiner.styled.js","components/Spiner/Spiner.jsx","components/ContactList/contactList.styled.js","components/IconBtn/iconBtn.styled.js","components/IconBtn/IconBtn.jsx","components/ContactsItems/contactsItems.styled.js","components/ContactsItems/ContactsItems.jsx","components/ContactList/ContactList.jsx","components/PhonebookFrom/phonebookFrom.styled.js","components/PhonebookFrom/PhonebookFrom.jsx","page/PhoneBook/PhoneBook.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FilterBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Label = styled.label`\n  align-items: center;\n  text-align: center;\n  font-size: 20px;\n`;\n\nexport const FilterInp = styled.input`\n  display: block;\n  font-size: 20px;\n  width: 250px;\n  margin-top: 15px;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { filterContacts } from 'redux/sliceFilter';\nimport { FilterBox, FilterInp, Label } from './filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(filterContacts(e.currentTarget.value));\n  };\n\n  return (\n    <FilterBox>\n      <Label>\n        Find contacts by name\n        <FilterInp type=\"text\" onChange={changeFilter} />\n      </Label>\n    </FilterBox>\n  );\n};\n\nEvent.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  //   margin-top: 16px;\n`;\n","import { Triangle, Puff } from 'react-loader-spinner';\n\nimport { Wrapper } from './spiner.styled';\n\nexport const Spiner = () => (\n  <Wrapper>\n    <Triangle\n      height=\"20\"\n      width=\"20\"\n      color=\"#8f67d1\"\n      ariaLabel=\"triangle-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  </Wrapper>\n);\n\nexport const SpinerDelete = () => (\n  <Wrapper>\n    <Puff\n      height=\"25\"\n      width=\"25\"\n      radius={2}\n      color=\"#000000\"\n      ariaLabel=\"puff-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  </Wrapper>\n);\n","import styled from '@emotion/styled';\n\nexport const ListBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  font-size: 18px;\n  color: rgb(1, 1, 1);\n`;\n","import styled from '@emotion/styled';\n\nexport const ButtonIcon = styled.button`\n  margin: 0;\n  padding: 10px;\n  border: none;\n  cursor: pointer;\n  border-radius: 50%;\n  color: white;\n  background-color: gray;\n\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import PropTypes from 'prop-types';\nimport { ButtonIcon } from './iconBtn.styled';\n\nexport const IconButton = ({ children, onClick, ...allyProps }) => {\n  return (\n    <ButtonIcon type=\"button\" onClick={onClick} {...allyProps}>\n      {children}\n    </ButtonIcon>\n  );\n};\n\nIconButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nIconButton.propTypes = {\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  'aria-label': PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  margin-bottom: 15px;\n  padding-left: 10px;\n  padding-right: 10px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 5px;\n  transition: all 300ms ease 0s;\n  box-shadow: #2fe6be;\n  align-items: center;\n  box-shadow: rgb(0 0 0) 0px 1px 5px;\n  &:hover {\n    background: ${props => props.theme.gradients.sunRise};\n    box-shadow: rgb(0 0 0 / 89%) 0px 7px 10px;\n  }\n`;\n\nexport const ContactIt = styled.p`\n  margin: 0;\n  padding: 10px;\n  margin-right: 20px;\n  font-weight: 700;\n`;\n","import { IconButton } from 'components/IconBtn/IconBtn';\nimport { SpinerDelete } from 'components/Spiner/Spiner';\nimport { ContactIt, Item } from './contactsItems.styled';\nimport { MdDeleteOutline } from 'react-icons/md';\nimport { useDeleteContactMutation } from '..//..//redux/spliceContacts';\n\nexport const ContactsItems = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <Item>\n      <ContactIt>\n        {name}: {number}\n      </ContactIt>\n      <IconButton\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n        aria-label=\"Delete contact\"\n      >\n        {isDeleting ? <SpinerDelete /> : <MdDeleteOutline size=\"20px\" />}\n      </IconButton>\n    </Item>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport { Spiner } from 'components/Spiner/Spiner';\nimport { ListBox } from './contactList.styled';\nimport { getFilter } from 'redux/sliceFilter';\nimport { ContactsItems } from 'components/ContactsItems/ContactsItems';\nimport { useGetContactsQuery } from '..//..//redux/spliceContacts';\n\nexport const ContactList = () => {\n  const { data: contacts, isFetching } = useGetContactsQuery();\n\n  const filter = useSelector(getFilter);\n\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    if (contacts) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n\n  const filteredContacts = findContacts();\n\n  return (\n    <ListBox>\n      {isFetching && <Spiner />}\n      <ul>\n        {contacts &&\n          filteredContacts.map(contact => (\n            <ContactsItems key={contact.id} {...contact} />\n          ))}\n      </ul>\n    </ListBox>\n  );\n};\n","import { Form, Field } from 'formik';\nimport styled from '@emotion/styled';\n\nexport const Input = styled(Field)`\n  font-size: 22px;\n  margin-top: 5px;\n`;\n\nexport const FormUs = styled(Form)`\n  margin: 10px auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  width: 500px;\n  border: 2px solid;\n  background-color: aliceblue;\n`;\n\nexport const LabelIn = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 22px;\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 200px;\n  padding: 10px;\n\n  border-radius: 3px;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: rgba(255, 183, 48, 1);\n    scale: 1.02;\n  }\n`;\n","import toast from 'react-hot-toast';\n\nimport { Formik } from 'formik';\n\nimport {\n  useGetContactsQuery,\n  useCreateContactMutation,\n} from '..//../redux/spliceContacts';\n\nimport { Button, FormUs, Input, LabelIn } from './phonebookFrom.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const PhonebookForm = () => {\n  const { data: contacts, isFetching } = useGetContactsQuery();\n  const [createContact] = useCreateContactMutation();\n\n  const userSubmit = (values, { resetForm }) => {\n    if (contacts.find(contact => contact.name === values.name)) {\n      return toast.error(`${values.name} is already is contacts`);\n    }\n\n    createContact(values);\n    if (!isFetching) {\n      toast.success(`Contact ${values.name} has been added`);\n    }\n\n    resetForm();\n  };\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={userSubmit}>\n        <FormUs>\n          <LabelIn htmlFor=\"\">\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </LabelIn>\n          <LabelIn htmlFor=\"\">\n            Number\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </LabelIn>\n          <Button type=\"submit\">Add contact</Button>\n        </FormUs>\n      </Formik>\n    </>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { Toaster } from 'react-hot-toast';\n\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { PhonebookForm } from '..//..//components/PhonebookFrom/PhonebookFrom';\nimport { PhonebookContainer, Title, TitleCont } from 'components/app.styled';\n\nexport default function PhoneBook() {\n  return (\n    <>\n      <Helmet>\n        <title>PhoneBook</title>\n      </Helmet>\n      <Title>PhoneBook</Title>\n\n      <PhonebookContainer>\n        <PhonebookForm />\n      </PhonebookContainer>\n      <TitleCont>Contacts</TitleCont>\n      <Filter />\n      <ContactList />\n      <Toaster />\n    </>\n  );\n}\n"],"names":["FilterBox","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","FilterInp","_templateObject3","Filter","dispatch","useDispatch","_jsx","children","_jsxs","type","onChange","e","filterContacts","currentTarget","value","Event","propTypes","filter","PropTypes","Wrapper","Spiner","Triangle","height","width","color","ariaLabel","wrapperStyle","wrapperClassName","visible","SpinerDelete","Puff","radius","wrapperClass","ListBox","ButtonIcon","IconButton","_ref","onClick","allyProps","_objectWithoutProperties","_excluded","_objectSpread","defaultProps","Item","props","theme","gradients","sunRise","ContactIt","ContactsItems","id","name","number","_useDeleteContactMuta","useDeleteContactMutation","_useDeleteContactMuta2","_slicedToArray","deleteContact","isDeleting","isLoading","MdDeleteOutline","size","ContactList","_useGetContactsQuery","useGetContactsQuery","contacts","data","isFetching","useSelector","getFilter","filteredContacts","normalizedFilter","toLowerCase","contact","includes","findContacts","map","Input","Field","FormUs","Form","LabelIn","Button","_templateObject4","initialValues","PhonebookForm","_useCreateContactMuta","useCreateContactMutation","createContact","_Fragment","Formik","onSubmit","values","resetForm","find","toast","concat","htmlFor","pattern","title","required","PhoneBook","Helmet","Title","PhonebookContainer","TitleCont","Toaster"],"sourceRoot":""}